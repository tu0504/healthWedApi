// <auto-generated />
using System;
using HEALTH_SUPPORT.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HEALTH_SUPPORT.Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HEALTH_SUPPORT.Repositories.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreateAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
<<<<<<< HEAD
                        .HasColumnType("nvarchar(max)");
=======
                        .HasColumnType("nvarchar(450)");
>>>>>>> 9bf8b07 (update entity)

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.HasIndex("Id")
=======
                    b.HasIndex("Email")
>>>>>>> 9bf8b07 (update entity)
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

<<<<<<< HEAD
=======
            modelBuilder.Entity("HEALTH_SUPPORT.Repositories.Entities.ProgramProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CompletePercent")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset?>("EndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("ProgramProgresses");
                });

>>>>>>> 9bf8b07 (update entity)
            modelBuilder.Entity("HEALTH_SUPPORT.Repositories.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
<<<<<<< HEAD
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
=======
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
>>>>>>> 9bf8b07 (update entity)
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HEALTH_SUPPORT.Repositories.Entities.Account", b =>
                {
                    b.HasOne("HEALTH_SUPPORT.Repositories.Entities.Role", "Role")
<<<<<<< HEAD
                        .WithMany()
=======
                        .WithMany("Accounts")
>>>>>>> 9bf8b07 (update entity)
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
<<<<<<< HEAD
=======

            modelBuilder.Entity("HEALTH_SUPPORT.Repositories.Entities.ProgramProgress", b =>
                {
                    b.HasOne("HEALTH_SUPPORT.Repositories.Entities.Account", "Account")
                        .WithMany("ProgramProgresses")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("HEALTH_SUPPORT.Repositories.Entities.Account", b =>
                {
                    b.Navigation("ProgramProgresses");
                });

            modelBuilder.Entity("HEALTH_SUPPORT.Repositories.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });
>>>>>>> 9bf8b07 (update entity)
#pragma warning restore 612, 618
        }
    }
}
