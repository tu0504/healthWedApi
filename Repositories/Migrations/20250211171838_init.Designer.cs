// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250211171838_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repositories.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Address = "123 Main St, City",
                            Email = "johndoe@example.com",
                            FullName = "John Doe",
                            IsDeleted = false,
                            PasswordHash = "hashedpassword123",
                            Phone = "123-456-7890",
                            RoleId = 1
                        },
                        new
                        {
                            AccountId = 2,
                            Address = "456 Elm St, City",
                            Email = "janesmith@example.com",
                            FullName = "Jane Smith",
                            IsDeleted = false,
                            PasswordHash = "hashedpassword456",
                            Phone = "987-654-3210",
                            RoleId = 2
                        },
                        new
                        {
                            AccountId = 3,
                            Address = "789 Oak St, City",
                            Email = "alicejohnson@example.com",
                            FullName = "Alice Johnson",
                            IsDeleted = false,
                            PasswordHash = "hashedpassword789",
                            Phone = "555-123-4567",
                            RoleId = 3
                        },
                        new
                        {
                            AccountId = 4,
                            Address = "321 Pine St, City",
                            Email = "managerment@example.com",
                            FullName = "Bob Williams",
                            IsDeleted = false,
                            PasswordHash = "pass123",
                            Phone = "666-987-6543",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("Repositories.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Student"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Parent"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Psychologist"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("Repositories.Models.Account", b =>
                {
                    b.HasOne("Repositories.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
